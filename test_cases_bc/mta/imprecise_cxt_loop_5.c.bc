; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/src/mta/imprecise_cxt_loop_5.c'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/mta/imprecise_cxt_loop_5.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%union.pthread_attr_t = type { i64, [48 x i8] }

@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"Press ENTER to continue\0A\00", align 1
@Global = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [45 x i8] c"cs0.Call,cs1.foo1,cs2.foo2,cs3.foo3,cs4.foo4\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"0,1,2,3,4\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"cs0.Call,cs1.foo1,cs2.foo2,cs3.foo3\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"0,1,2,3\00", align 1
@t4 = common dso_local global i64 0, align 8
@.str.7 = private unnamed_addr constant [27 x i8] c"cs0.Call,cs1.foo1,cs2.foo2\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"0,1,2\00", align 1
@t3 = common dso_local global i64 0, align 8
@.str.9 = private unnamed_addr constant [18 x i8] c"cs0.Call,cs1.foo1\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"0,1\00", align 1
@t2 = common dso_local global [5 x i64] zeroinitializer, align 16
@.str.11 = private unnamed_addr constant [9 x i8] c"cs0.Call\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@t1 = common dso_local global i64 0, align 8
@.str.13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"3\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"4\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MUSTALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PARTIALALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MAYALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @NOALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @EXPECTEDFAIL_MAYALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @EXPECTEDFAIL_NOALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @SAFEMALLOC(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #3
  ret i8* %5
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @PLKMALLOC(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #3
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @NFRMALLOC(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #3
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @CLKMALLOC(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #3
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @NFRLEAKFP(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #3
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @PLKLEAKFP(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #3
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @LEAKFN(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #3
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @RC_ACCESS(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CXT_THREAD(i32, i8*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @TCT_ACCESS(i32, i8*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @INTERLEV_ACCESS(i32, i8*, i8*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PAUSE(i8*) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8* %3)
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0))
  %6 = call i32 @getchar()
  ret void
}

declare dso_local i32 @getchar() #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @deref() #0 {
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @foo4(i8*) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i32, i32* @Global, align 4
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* @Global, align 4
  call void @INTERLEV_ACCESS(i32 4, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0))
  %5 = load i8*, i8** %2, align 8
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @foo3(i8*) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i32, i32* @Global, align 4
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* @Global, align 4
  call void @INTERLEV_ACCESS(i32 3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0))
  br label %5

5:                                                ; preds = %1
  %6 = call i32 @pthread_create(i64* @t4, %union.pthread_attr_t* null, i8* (i8*)* @foo4, i8* null) #3
  %7 = load i32, i32* @Global, align 4
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* @Global, align 4
  call void @INTERLEV_ACCESS(i32 3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0))
  %9 = load i64, i64* @t4, align 8
  %10 = call i32 @pthread_join(i64 %9, i8** null)
  %11 = load i32, i32* @Global, align 4
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* @Global, align 4
  call void @INTERLEV_ACCESS(i32 3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0))
  %13 = load i8*, i8** %2, align 8
  ret i8* %13
}

; Function Attrs: nounwind
declare !callback !2 dso_local i32 @pthread_create(i64*, %union.pthread_attr_t*, i8* (i8*)*, i8*) #2

declare dso_local i32 @pthread_join(i64, i8**) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @foo2(i8*) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i32, i32* @Global, align 4
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* @Global, align 4
  call void @INTERLEV_ACCESS(i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0))
  br label %5

5:                                                ; preds = %1
  %6 = call i32 @pthread_create(i64* @t3, %union.pthread_attr_t* null, i8* (i8*)* @foo3, i8* null) #3
  %7 = load i32, i32* @Global, align 4
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* @Global, align 4
  call void @INTERLEV_ACCESS(i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0))
  %9 = load i64, i64* @t3, align 8
  %10 = call i32 @pthread_join(i64 %9, i8** null)
  %11 = load i32, i32* @Global, align 4
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* @Global, align 4
  call void @INTERLEV_ACCESS(i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0))
  %13 = load i8*, i8** %2, align 8
  ret i8* %13
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @foo1(i8*) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %4 = load i32, i32* @Global, align 4
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* @Global, align 4
  call void @INTERLEV_ACCESS(i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %6

6:                                                ; preds = %22, %1
  %7 = load i32, i32* %3, align 4
  %8 = icmp slt i32 %7, 5
  br i1 %8, label %9, label %25

9:                                                ; preds = %6
  br label %10

10:                                               ; preds = %9
  %11 = load i32, i32* %3, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [5 x i64], [5 x i64]* @t2, i64 0, i64 %12
  %14 = call i32 @pthread_create(i64* %13, %union.pthread_attr_t* null, i8* (i8*)* @foo2, i8* null) #3
  %15 = load i32, i32* @Global, align 4
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* @Global, align 4
  call void @INTERLEV_ACCESS(i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0))
  %17 = load i32, i32* %3, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [5 x i64], [5 x i64]* @t2, i64 0, i64 %18
  %20 = load i64, i64* %19, align 8
  %21 = call i32 @pthread_join(i64 %20, i8** null)
  br label %22

22:                                               ; preds = %10
  %23 = load i32, i32* %3, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %3, align 4
  br label %6

25:                                               ; preds = %6
  %26 = load i32, i32* @Global, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* @Global, align 4
  call void @INTERLEV_ACCESS(i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0))
  %28 = load i8*, i8** %2, align 8
  ret i8* %28
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @Call() #0 {
  %1 = load i32, i32* @Global, align 4
  %2 = add nsw i32 %1, 1
  store i32 %2, i32* @Global, align 4
  call void @INTERLEV_ACCESS(i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0))
  br label %3

3:                                                ; preds = %0
  %4 = call i32 @pthread_create(i64* @t1, %union.pthread_attr_t* null, i8* (i8*)* @foo1, i8* null) #3
  %5 = load i32, i32* @Global, align 4
  %6 = add nsw i32 %5, 1
  store i32 %6, i32* @Global, align 4
  call void @INTERLEV_ACCESS(i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0))
  %7 = load i64, i64* @t1, align 8
  %8 = call i32 @pthread_join(i64 %7, i8** null)
  %9 = load i32, i32* @Global, align 4
  %10 = add nsw i32 %9, 1
  store i32 %10, i32* @Global, align 4
  call void @INTERLEV_ACCESS(i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %2 = load i32, i32* @Global, align 4
  %3 = add nsw i32 %2, 1
  store i32 %3, i32* @Global, align 4
  call void @INTERLEV_ACCESS(i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0))
  br label %4

4:                                                ; preds = %0
  call void @Call()
  %5 = load i32, i32* @Global, align 4
  %6 = add nsw i32 %5, 1
  store i32 %6, i32* @Global, align 4
  call void @INTERLEV_ACCESS(i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0))
  call void @CXT_THREAD(i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0))
  call void @CXT_THREAD(i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0))
  call void @CXT_THREAD(i32 3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i64 0, i64 0))
  call void @CXT_THREAD(i32 4, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0))
  call void @TCT_ACCESS(i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0))
  call void @TCT_ACCESS(i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0))
  call void @TCT_ACCESS(i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0))
  call void @TCT_ACCESS(i32 3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0))
  ret i32 1
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 9.0.0-2~ubuntu18.04.2 (tags/RELEASE_900/final)"}
!2 = !{!3}
!3 = !{i64 2, i64 3, i1 false}
