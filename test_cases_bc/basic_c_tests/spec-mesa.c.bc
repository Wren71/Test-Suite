; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/src/basic_c_tests/spec-mesa.c'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/basic_c_tests/spec-mesa.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.context = type { %struct.api_table, %struct.api_table }
%struct.api_table = type { void (i32*, i32*)*, void (i32*, i32*)*, void (i32*, i32*)* }
%struct.mesa_context = type { %struct.context* }

@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"Press ENTER to continue\0A\00", align 1
@CC = common dso_local global %struct.context* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MUSTALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PARTIALALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MAYALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @NOALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @EXPECTEDFAIL_MAYALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @EXPECTEDFAIL_NOALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @SAFEMALLOC(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #4
  ret i8* %5
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @PLKMALLOC(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #4
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @NFRMALLOC(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #4
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @CLKMALLOC(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #4
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @NFRLEAKFP(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #4
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @PLKLEAKFP(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #4
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @LEAKFN(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #4
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @RC_ACCESS(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CXT_THREAD(i32, i8*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @TCT_ACCESS(i32, i8*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @INTERLEV_ACCESS(i32, i8*, i8*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PAUSE(i8*) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8* %3)
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0))
  %6 = call i32 @getchar()
  ret void
}

declare dso_local i32 @getchar() #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @deref() #0 {
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @begin(i32*, i32*) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = bitcast i32* %5 to i8*
  %7 = load i32*, i32** %4, align 8
  %8 = bitcast i32* %7 to i8*
  call void @NOALIAS(i8* %6, i8* %8)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @end(i32*, i32*) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = bitcast i32* %5 to i8*
  %7 = load i32*, i32** %4, align 8
  %8 = bitcast i32* %7 to i8*
  call void @MAYALIAS(i8* %6, i8* %8)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @render(i32*, i32*) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = bitcast i32* %5 to i8*
  %7 = load i32*, i32** %4, align 8
  %8 = bitcast i32* %7 to i8*
  call void @MAYALIAS(i8* %6, i8* %8)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @init_exec_pointers(%struct.api_table*) #0 {
  %2 = alloca %struct.api_table*, align 8
  store %struct.api_table* %0, %struct.api_table** %2, align 8
  %3 = load %struct.api_table*, %struct.api_table** %2, align 8
  %4 = getelementptr inbounds %struct.api_table, %struct.api_table* %3, i32 0, i32 0
  store void (i32*, i32*)* @begin, void (i32*, i32*)** %4, align 8
  %5 = load %struct.api_table*, %struct.api_table** %2, align 8
  %6 = getelementptr inbounds %struct.api_table, %struct.api_table* %5, i32 0, i32 1
  store void (i32*, i32*)* @end, void (i32*, i32*)** %6, align 8
  %7 = load %struct.api_table*, %struct.api_table** %2, align 8
  %8 = getelementptr inbounds %struct.api_table, %struct.api_table* %7, i32 0, i32 2
  store void (i32*, i32*)* @render, void (i32*, i32*)** %8, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @init_api_function(%struct.context*) #0 {
  %2 = alloca %struct.context*, align 8
  store %struct.context* %0, %struct.context** %2, align 8
  %3 = load %struct.context*, %struct.context** %2, align 8
  %4 = getelementptr inbounds %struct.context, %struct.context* %3, i32 0, i32 1
  call void @init_exec_pointers(%struct.api_table* %4)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.context* @create_context() #0 {
  %1 = alloca %struct.context*, align 8
  %2 = call noalias i8* @malloc(i64 48) #4
  %3 = bitcast i8* %2 to %struct.context*
  store %struct.context* %3, %struct.context** %1, align 8
  %4 = load %struct.context*, %struct.context** %1, align 8
  call void @init_api_function(%struct.context* %4)
  %5 = load %struct.context*, %struct.context** %1, align 8
  %6 = getelementptr inbounds %struct.context, %struct.context* %5, i32 0, i32 0
  %7 = load %struct.context*, %struct.context** %1, align 8
  %8 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 1
  %9 = bitcast %struct.api_table* %6 to i8*
  %10 = bitcast %struct.api_table* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false)
  %11 = load %struct.context*, %struct.context** %1, align 8
  ret %struct.context* %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @change_context(%struct.context*) #0 {
  %2 = alloca %struct.context*, align 8
  store %struct.context* %0, %struct.context** %2, align 8
  %3 = load %struct.context*, %struct.context** %2, align 8
  store %struct.context* %3, %struct.context** @CC, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @make_current(%struct.mesa_context*) #0 {
  %2 = alloca %struct.mesa_context*, align 8
  store %struct.mesa_context* %0, %struct.mesa_context** %2, align 8
  %3 = load %struct.mesa_context*, %struct.mesa_context** %2, align 8
  %4 = getelementptr inbounds %struct.mesa_context, %struct.mesa_context* %3, i32 0, i32 0
  %5 = load %struct.context*, %struct.context** %4, align 8
  call void @change_context(%struct.context* %5)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @draw(i32*, i32*, i32*) #0 {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %struct.context*, %struct.context** @CC, align 8
  %8 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.api_table, %struct.api_table* %8, i32 0, i32 0
  %10 = load void (i32*, i32*)*, void (i32*, i32*)** %9, align 8
  %11 = load i32*, i32** %4, align 8
  %12 = load i32*, i32** %5, align 8
  call void %10(i32* %11, i32* %12)
  %13 = load i32*, i32** %4, align 8
  %14 = icmp ne i32* %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %3
  %16 = load i32*, i32** %6, align 8
  store i32* %16, i32** %5, align 8
  br label %17

17:                                               ; preds = %15, %3
  %18 = load %struct.context*, %struct.context** @CC, align 8
  %19 = getelementptr inbounds %struct.context, %struct.context* %18, i32 0, i32 0
  %20 = getelementptr inbounds %struct.api_table, %struct.api_table* %19, i32 0, i32 2
  %21 = load void (i32*, i32*)*, void (i32*, i32*)** %20, align 8
  %22 = icmp ne void (i32*, i32*)* %21, null
  br i1 %22, label %23, label %36

23:                                               ; preds = %17
  %24 = load %struct.context*, %struct.context** @CC, align 8
  %25 = getelementptr inbounds %struct.context, %struct.context* %24, i32 0, i32 0
  %26 = getelementptr inbounds %struct.api_table, %struct.api_table* %25, i32 0, i32 2
  %27 = load void (i32*, i32*)*, void (i32*, i32*)** %26, align 8
  %28 = load i32*, i32** %5, align 8
  %29 = load i32*, i32** %6, align 8
  call void %27(i32* %28, i32* %29)
  %30 = load %struct.context*, %struct.context** @CC, align 8
  %31 = getelementptr inbounds %struct.context, %struct.context* %30, i32 0, i32 0
  %32 = getelementptr inbounds %struct.api_table, %struct.api_table* %31, i32 0, i32 1
  %33 = load void (i32*, i32*)*, void (i32*, i32*)** %32, align 8
  %34 = load i32*, i32** %4, align 8
  %35 = load i32*, i32** %6, align 8
  call void %33(i32* %34, i32* %35)
  br label %43

36:                                               ; preds = %17
  %37 = load %struct.context*, %struct.context** @CC, align 8
  %38 = getelementptr inbounds %struct.context, %struct.context* %37, i32 0, i32 0
  %39 = getelementptr inbounds %struct.api_table, %struct.api_table* %38, i32 0, i32 1
  %40 = load void (i32*, i32*)*, void (i32*, i32*)** %39, align 8
  %41 = load i32*, i32** %5, align 8
  %42 = load i32*, i32** %4, align 8
  call void %40(i32* %41, i32* %42)
  br label %43

43:                                               ; preds = %36, %23
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @delete_context(%struct.context*) #0 {
  %2 = alloca %struct.context*, align 8
  store %struct.context* %0, %struct.context** %2, align 8
  %3 = load %struct.context*, %struct.context** %2, align 8
  %4 = bitcast %struct.context* %3 to i8*
  call void @free(i8* %4) #4
  ret void
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.mesa_context*, align 8
  store i32 0, i32* %1, align 4
  %6 = call noalias i8* @malloc(i64 8) #4
  %7 = bitcast i8* %6 to %struct.mesa_context*
  store %struct.mesa_context* %7, %struct.mesa_context** %5, align 8
  %8 = call %struct.context* @create_context()
  %9 = load %struct.mesa_context*, %struct.mesa_context** %5, align 8
  %10 = getelementptr inbounds %struct.mesa_context, %struct.mesa_context* %9, i32 0, i32 0
  store %struct.context* %8, %struct.context** %10, align 8
  %11 = load %struct.mesa_context*, %struct.mesa_context** %5, align 8
  call void @make_current(%struct.mesa_context* %11)
  call void @draw(i32* %2, i32* %3, i32* %4)
  %12 = load %struct.mesa_context*, %struct.mesa_context** %5, align 8
  %13 = getelementptr inbounds %struct.mesa_context, %struct.mesa_context* %12, i32 0, i32 0
  %14 = load %struct.context*, %struct.context** %13, align 8
  call void @delete_context(%struct.context* %14)
  %15 = load %struct.mesa_context*, %struct.mesa_context** %5, align 8
  %16 = bitcast %struct.mesa_context* %15 to i8*
  call void @free(i8* %16) #4
  ret i32 0
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 9.0.0-2~ubuntu18.04.2 (tags/RELEASE_900/final)"}
