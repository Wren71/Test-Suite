; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/src/basic_c_tests/spec-vortex.c'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/basic_c_tests/spec-vortex.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.Ory = type { i8** }
%struct.Rectangle = type { void (i32*, float*)* }

@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"Press ENTER to continue\0A\00", align 1
@Theory = dso_local global %struct.Ory* null, align 8
@PartLib01 = dso_local global i32* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MUSTALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PARTIALALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MAYALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @NOALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @EXPECTEDFAIL_MAYALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @EXPECTEDFAIL_NOALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @SAFEMALLOC(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #3
  ret i8* %5
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @PLKMALLOC(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #3
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @NFRMALLOC(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #3
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @CLKMALLOC(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #3
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @NFRLEAKFP(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #3
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @PLKLEAKFP(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #3
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @LEAKFN(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #3
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @RC_ACCESS(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CXT_THREAD(i32, i8*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @TCT_ACCESS(i32, i8*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @INTERLEV_ACCESS(i32, i8*, i8*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PAUSE(i8*) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8* %3)
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0))
  %6 = call i32 @getchar()
  ret void
}

declare dso_local i32 @getchar() #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @deref() #0 {
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @Rectangle_draw(i32*, float*) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca float*, align 8
  store i32* %0, i32** %3, align 8
  store float* %1, float** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @Void_ExtendCore(i64*) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  %4 = load i8*, i8** %2, align 8
  ret i8* %4
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CoreMoreCore(i8**) #0 {
  %2 = alloca i8**, align 8
  %3 = alloca i64, align 8
  store i8** %0, i8*** %2, align 8
  store i64 0, i64* %3, align 8
  %4 = call i8* @Void_ExtendCore(i64* %3)
  %5 = load i8**, i8*** %2, align 8
  store i8* %4, i8** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MemNewOry() #0 {
  %1 = alloca i8**, align 8
  %2 = alloca i8*, align 8
  store i8** null, i8*** %1, align 8
  %3 = call noalias i8* @calloc(i64 1, i64 8) #3
  store i8* %3, i8** %2, align 8
  call void @CoreMoreCore(i8** bitcast (%struct.Ory** @Theory to i8**))
  %4 = load i8*, i8** %2, align 8
  %5 = bitcast i8* %4 to i8**
  %6 = load %struct.Ory*, %struct.Ory** @Theory, align 8
  %7 = getelementptr inbounds %struct.Ory, %struct.Ory* %6, i32 0, i32 0
  store i8** %5, i8*** %7, align 8
  %8 = icmp ne i8** %5, null
  br i1 %8, label %9, label %16

9:                                                ; preds = %0
  %10 = load %struct.Ory*, %struct.Ory** @Theory, align 8
  %11 = getelementptr inbounds %struct.Ory, %struct.Ory* %10, i32 0, i32 0
  %12 = load i8**, i8*** %11, align 8
  store i8** %12, i8*** %1, align 8
  %13 = load i8**, i8*** %1, align 8
  %14 = bitcast i8** %13 to i8*
  %15 = load i8**, i8*** %1, align 8
  store i8* %14, i8** %15, align 8
  br label %16

16:                                               ; preds = %9, %0
  ret void
}

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MemGetAddr(i32, i32, i8**) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i8** %2, i8*** %6, align 8
  %7 = load %struct.Ory*, %struct.Ory** @Theory, align 8
  %8 = getelementptr inbounds %struct.Ory, %struct.Ory* %7, i32 0, i32 0
  %9 = load i8**, i8*** %8, align 8
  %10 = load i32, i32* %4, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8*, i8** %9, i64 %11
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast i8* %13 to i8**
  %15 = load i32, i32* %5, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i8*, i8** %14, i64 %16
  %18 = load i8*, i8** %17, align 8
  %19 = load i8**, i8*** %6, align 8
  store i8* %18, i8** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @Object_GetImage(i8**) #0 {
  %2 = alloca i8**, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i8** %0, i8*** %2, align 8
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = load i8**, i8*** %2, align 8
  call void @MemGetAddr(i32 %5, i32 %6, i8** %7)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @Rectangle_new0() #0 {
  %1 = alloca %struct.Rectangle*, align 8
  store %struct.Rectangle* null, %struct.Rectangle** %1, align 8
  %2 = bitcast %struct.Rectangle** %1 to i8**
  call void @Object_GetImage(i8** %2)
  %3 = load %struct.Rectangle*, %struct.Rectangle** %1, align 8
  %4 = getelementptr inbounds %struct.Rectangle, %struct.Rectangle* %3, i32 0, i32 0
  store void (i32*, float*)* @Rectangle_draw, void (i32*, float*)** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PartLib_Create(i32**) #0 {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  %4 = bitcast i32** %3 to i8**
  call void @Object_GetImage(i8** %4)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  call void @PartLib_Create(i32** @PartLib01)
  %2 = load i32*, i32** @PartLib01, align 8
  %3 = bitcast i32* %2 to i8*
  call void @NOALIAS(i8* %3, i8* bitcast (void (i32*, float*)* @Rectangle_draw to i8*))
  ret i32 0
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 9.0.0-2~ubuntu18.04.2 (tags/RELEASE_900/final)"}
