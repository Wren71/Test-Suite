; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/src/basic_c_tests/spec-equake.c'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/basic_c_tests/spec-equake.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"Press ENTER to continue\0A\00", align 1
@disp = common dso_local global double*** null, align 8
@.str.3 = private unnamed_addr constant [17 x i8] c"null pointer 2!\0A\00", align 1
@K = common dso_local global double*** null, align 8
@v = common dso_local global double** null, align 8
@ARCHmatrixindex = common dso_local global i32* null, align 8
@Acol = common dso_local global i32* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MUSTALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PARTIALALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MAYALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @NOALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @EXPECTEDFAIL_MAYALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @EXPECTEDFAIL_NOALIAS(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @SAFEMALLOC(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #3
  ret i8* %5
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @PLKMALLOC(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #3
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @NFRMALLOC(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #3
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @CLKMALLOC(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #3
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @NFRLEAKFP(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #3
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @PLKLEAKFP(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #3
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @LEAKFN(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #3
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @RC_ACCESS(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CXT_THREAD(i32, i8*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @TCT_ACCESS(i32, i8*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @INTERLEV_ACCESS(i32, i8*, i8*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PAUSE(i8*) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8* %3)
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0))
  %6 = call i32 @getchar()
  ret void
}

declare dso_local i32 @getchar() #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @deref() #0 {
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32, i8**) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %19 = call noalias i8* @malloc(i64 24) #3
  %20 = bitcast i8* %19 to double***
  store double*** %20, double**** @disp, align 8
  store i32 0, i32* %9, align 4
  br label %21

21:                                               ; preds = %49, %2
  %22 = load i32, i32* %9, align 4
  %23 = icmp slt i32 %22, 3
  br i1 %23, label %24, label %52

24:                                               ; preds = %21
  %25 = call noalias i8* @malloc(i64 40000) #3
  %26 = bitcast i8* %25 to double**
  %27 = load double***, double**** @disp, align 8
  %28 = load i32, i32* %9, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds double**, double*** %27, i64 %29
  store double** %26, double*** %30, align 8
  store i32 0, i32* %6, align 4
  br label %31

31:                                               ; preds = %45, %24
  %32 = load i32, i32* %6, align 4
  %33 = icmp slt i32 %32, 5000
  br i1 %33, label %34, label %48

34:                                               ; preds = %31
  %35 = call noalias i8* @malloc(i64 32) #3
  %36 = bitcast i8* %35 to double*
  %37 = load double***, double**** @disp, align 8
  %38 = load i32, i32* %9, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds double**, double*** %37, i64 %39
  %41 = load double**, double*** %40, align 8
  %42 = load i32, i32* %6, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds double*, double** %41, i64 %43
  store double* %36, double** %44, align 8
  br label %45

45:                                               ; preds = %34
  %46 = load i32, i32* %6, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %6, align 4
  br label %31

48:                                               ; preds = %31
  br label %49

49:                                               ; preds = %48
  %50 = load i32, i32* %9, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %9, align 4
  br label %21

52:                                               ; preds = %21
  %53 = load double***, double**** @disp, align 8
  %54 = getelementptr inbounds double**, double*** %53, i64 2
  %55 = load double**, double*** %54, align 8
  %56 = getelementptr inbounds double*, double** %55, i64 4999
  %57 = load double*, double** %56, align 8
  %58 = icmp eq double* %57, null
  br i1 %58, label %59, label %61

59:                                               ; preds = %52
  %60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %695

61:                                               ; preds = %52
  %62 = call noalias i8* @malloc(i64 24) #3
  %63 = bitcast i8* %62 to double***
  store double*** %63, double**** @K, align 8
  store i32 0, i32* %9, align 4
  br label %64

64:                                               ; preds = %92, %61
  %65 = load i32, i32* %9, align 4
  %66 = icmp slt i32 %65, 3
  br i1 %66, label %67, label %95

67:                                               ; preds = %64
  %68 = call noalias i8* @malloc(i64 40000) #3
  %69 = bitcast i8* %68 to double**
  %70 = load double***, double**** @K, align 8
  %71 = load i32, i32* %9, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds double**, double*** %70, i64 %72
  store double** %69, double*** %73, align 8
  store i32 0, i32* %6, align 4
  br label %74

74:                                               ; preds = %88, %67
  %75 = load i32, i32* %6, align 4
  %76 = icmp slt i32 %75, 5000
  br i1 %76, label %77, label %91

77:                                               ; preds = %74
  %78 = call noalias i8* @malloc(i64 32) #3
  %79 = bitcast i8* %78 to double*
  %80 = load double***, double**** @K, align 8
  %81 = load i32, i32* %9, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds double**, double*** %80, i64 %82
  %84 = load double**, double*** %83, align 8
  %85 = load i32, i32* %6, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds double*, double** %84, i64 %86
  store double* %79, double** %87, align 8
  br label %88

88:                                               ; preds = %77
  %89 = load i32, i32* %6, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %6, align 4
  br label %74

91:                                               ; preds = %74
  br label %92

92:                                               ; preds = %91
  %93 = load i32, i32* %9, align 4
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %9, align 4
  br label %64

95:                                               ; preds = %64
  %96 = load double***, double**** @K, align 8
  %97 = getelementptr inbounds double**, double*** %96, i64 2
  %98 = load double**, double*** %97, align 8
  %99 = getelementptr inbounds double*, double** %98, i64 4999
  %100 = load double*, double** %99, align 8
  %101 = icmp eq double* %100, null
  br i1 %101, label %102, label %104

102:                                              ; preds = %95
  %103 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %695

104:                                              ; preds = %95
  %105 = call noalias i8* @malloc(i64 40000) #3
  %106 = bitcast i8* %105 to double**
  store double** %106, double*** @v, align 8
  store i32 0, i32* %6, align 4
  br label %107

107:                                              ; preds = %117, %104
  %108 = load i32, i32* %6, align 4
  %109 = icmp slt i32 %108, 5000
  br i1 %109, label %110, label %120

110:                                              ; preds = %107
  %111 = call noalias i8* @malloc(i64 32) #3
  %112 = bitcast i8* %111 to double*
  %113 = load double**, double*** @v, align 8
  %114 = load i32, i32* %6, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds double*, double** %113, i64 %115
  store double* %112, double** %116, align 8
  br label %117

117:                                              ; preds = %110
  %118 = load i32, i32* %6, align 4
  %119 = add nsw i32 %118, 1
  store i32 %119, i32* %6, align 4
  br label %107

120:                                              ; preds = %107
  %121 = load double**, double*** @v, align 8
  %122 = getelementptr inbounds double*, double** %121, i64 4999
  %123 = load double*, double** %122, align 8
  %124 = icmp eq double* %123, null
  br i1 %124, label %125, label %127

125:                                              ; preds = %120
  %126 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %695

127:                                              ; preds = %120
  %128 = call noalias i8* @malloc(i64 20004) #3
  %129 = bitcast i8* %128 to i32*
  store i32* %129, i32** @ARCHmatrixindex, align 8
  %130 = load i32*, i32** @ARCHmatrixindex, align 8
  %131 = icmp eq i32* %130, null
  br i1 %131, label %132, label %134

132:                                              ; preds = %127
  %133 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %695

134:                                              ; preds = %127
  %135 = call noalias i8* @malloc(i64 16) #3
  %136 = bitcast i8* %135 to i32*
  store i32* %136, i32** @Acol, align 8
  %137 = load i32*, i32** @Acol, align 8
  %138 = icmp eq i32* %137, null
  br i1 %138, label %139, label %141

139:                                              ; preds = %134
  %140 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %695

141:                                              ; preds = %134
  store i32 0, i32* %9, align 4
  br label %142

142:                                              ; preds = %192, %141
  %143 = load i32, i32* %9, align 4
  %144 = icmp slt i32 %143, 3
  br i1 %144, label %145, label %195

145:                                              ; preds = %142
  store i32 0, i32* %6, align 4
  br label %146

146:                                              ; preds = %188, %145
  %147 = load i32, i32* %6, align 4
  %148 = icmp slt i32 %147, 5000
  br i1 %148, label %149, label %191

149:                                              ; preds = %146
  store i32 0, i32* %7, align 4
  br label %150

150:                                              ; preds = %184, %149
  %151 = load i32, i32* %7, align 4
  %152 = icmp slt i32 %151, 4
  br i1 %152, label %153, label %187

153:                                              ; preds = %150
  %154 = load double***, double**** @disp, align 8
  %155 = load i32, i32* %9, align 4
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds double**, double*** %154, i64 %156
  %158 = load double**, double*** %157, align 8
  %159 = load i32, i32* %6, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds double*, double** %158, i64 %160
  %162 = load double*, double** %161, align 8
  %163 = load i32, i32* %7, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds double, double* %162, i64 %164
  store double 0.000000e+00, double* %165, align 8
  %166 = load i32, i32* %6, align 4
  %167 = sitofp i32 %166 to double
  %168 = fmul double 1.100000e+00, %167
  %169 = load i32, i32* %7, align 4
  %170 = sitofp i32 %169 to double
  %171 = fadd double %168, %170
  %172 = load double***, double**** @K, align 8
  %173 = load i32, i32* %9, align 4
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds double**, double*** %172, i64 %174
  %176 = load double**, double*** %175, align 8
  %177 = load i32, i32* %6, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds double*, double** %176, i64 %178
  %180 = load double*, double** %179, align 8
  %181 = load i32, i32* %7, align 4
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds double, double* %180, i64 %182
  store double %171, double* %183, align 8
  br label %184

184:                                              ; preds = %153
  %185 = load i32, i32* %7, align 4
  %186 = add nsw i32 %185, 1
  store i32 %186, i32* %7, align 4
  br label %150

187:                                              ; preds = %150
  br label %188

188:                                              ; preds = %187
  %189 = load i32, i32* %6, align 4
  %190 = add nsw i32 %189, 1
  store i32 %190, i32* %6, align 4
  br label %146

191:                                              ; preds = %146
  br label %192

192:                                              ; preds = %191
  %193 = load i32, i32* %9, align 4
  %194 = add nsw i32 %193, 1
  store i32 %194, i32* %9, align 4
  br label %142

195:                                              ; preds = %142
  store i32 0, i32* %6, align 4
  br label %196

196:                                              ; preds = %222, %195
  %197 = load i32, i32* %6, align 4
  %198 = icmp slt i32 %197, 5000
  br i1 %198, label %199, label %225

199:                                              ; preds = %196
  store i32 0, i32* %7, align 4
  br label %200

200:                                              ; preds = %218, %199
  %201 = load i32, i32* %7, align 4
  %202 = icmp slt i32 %201, 4
  br i1 %202, label %203, label %221

203:                                              ; preds = %200
  %204 = load i32, i32* %6, align 4
  %205 = sitofp i32 %204 to double
  %206 = fmul double 1.100000e+00, %205
  %207 = load i32, i32* %7, align 4
  %208 = sitofp i32 %207 to double
  %209 = fadd double %206, %208
  %210 = load double**, double*** @v, align 8
  %211 = load i32, i32* %6, align 4
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds double*, double** %210, i64 %212
  %214 = load double*, double** %213, align 8
  %215 = load i32, i32* %7, align 4
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds double, double* %214, i64 %216
  store double %209, double* %217, align 8
  br label %218

218:                                              ; preds = %203
  %219 = load i32, i32* %7, align 4
  %220 = add nsw i32 %219, 1
  store i32 %220, i32* %7, align 4
  br label %200

221:                                              ; preds = %200
  br label %222

222:                                              ; preds = %221
  %223 = load i32, i32* %6, align 4
  %224 = add nsw i32 %223, 1
  store i32 %224, i32* %6, align 4
  br label %196

225:                                              ; preds = %196
  store i32 0, i32* %6, align 4
  br label %226

226:                                              ; preds = %244, %225
  %227 = load i32, i32* %6, align 4
  %228 = icmp slt i32 %227, 5001
  br i1 %228, label %229, label %247

229:                                              ; preds = %226
  %230 = load i32*, i32** @ARCHmatrixindex, align 8
  %231 = load i32, i32* %6, align 4
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds i32, i32* %230, i64 %232
  store i32 0, i32* %233, align 4
  %234 = load i32*, i32** @ARCHmatrixindex, align 8
  %235 = load i32, i32* %6, align 4
  %236 = add nsw i32 %235, 1
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds i32, i32* %234, i64 %237
  store i32 1, i32* %238, align 4
  %239 = load i32*, i32** @ARCHmatrixindex, align 8
  %240 = load i32, i32* %6, align 4
  %241 = add nsw i32 %240, 2
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds i32, i32* %239, i64 %242
  store i32 2, i32* %243, align 4
  br label %244

244:                                              ; preds = %229
  %245 = load i32, i32* %6, align 4
  %246 = add nsw i32 %245, 3
  store i32 %246, i32* %6, align 4
  br label %226

247:                                              ; preds = %226
  store i32 0, i32* %6, align 4
  br label %248

248:                                              ; preds = %258, %247
  %249 = load i32, i32* %6, align 4
  %250 = icmp slt i32 %249, 4
  br i1 %250, label %251, label %261

251:                                              ; preds = %248
  %252 = load i32, i32* %6, align 4
  %253 = mul nsw i32 300, %252
  %254 = load i32*, i32** @Acol, align 8
  %255 = load i32, i32* %6, align 4
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds i32, i32* %254, i64 %256
  store i32 %253, i32* %257, align 4
  br label %258

258:                                              ; preds = %251
  %259 = load i32, i32* %6, align 4
  %260 = add nsw i32 %259, 1
  store i32 %260, i32* %6, align 4
  br label %248

261:                                              ; preds = %248
  store i32 0, i32* %10, align 4
  br label %262

262:                                              ; preds = %592, %261
  %263 = load i32, i32* %10, align 4
  %264 = icmp slt i32 %263, 100000
  br i1 %264, label %265, label %595

265:                                              ; preds = %262
  store i32 0, i32* %6, align 4
  br label %266

266:                                              ; preds = %588, %265
  %267 = load i32, i32* %6, align 4
  %268 = icmp slt i32 %267, 5000
  br i1 %268, label %269, label %591

269:                                              ; preds = %266
  %270 = load i32*, i32** @ARCHmatrixindex, align 8
  %271 = load i32, i32* %6, align 4
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds i32, i32* %270, i64 %272
  %274 = load i32, i32* %273, align 4
  store i32 %274, i32* %11, align 4
  %275 = load i32*, i32** @ARCHmatrixindex, align 8
  %276 = load i32, i32* %6, align 4
  %277 = add nsw i32 %276, 1
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds i32, i32* %275, i64 %278
  %280 = load i32, i32* %279, align 4
  store i32 %280, i32* %12, align 4
  br label %281

281:                                              ; preds = %285, %269
  %282 = load i32, i32* %11, align 4
  %283 = load i32, i32* %12, align 4
  %284 = icmp slt i32 %282, %283
  br i1 %284, label %285, label %587

285:                                              ; preds = %281
  %286 = load i32*, i32** @Acol, align 8
  %287 = load i32, i32* %11, align 4
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds i32, i32* %286, i64 %288
  %290 = load i32, i32* %289, align 4
  store i32 %290, i32* %13, align 4
  %291 = load double***, double**** @K, align 8
  %292 = load i32, i32* %11, align 4
  %293 = sext i32 %292 to i64
  %294 = getelementptr inbounds double**, double*** %291, i64 %293
  %295 = load double**, double*** %294, align 8
  %296 = getelementptr inbounds double*, double** %295, i64 0
  %297 = load double*, double** %296, align 8
  %298 = getelementptr inbounds double, double* %297, i64 0
  %299 = load double, double* %298, align 8
  %300 = load double**, double*** @v, align 8
  %301 = load i32, i32* %6, align 4
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds double*, double** %300, i64 %302
  %304 = load double*, double** %303, align 8
  %305 = getelementptr inbounds double, double* %304, i64 0
  %306 = load double, double* %305, align 8
  %307 = fmul double %299, %306
  %308 = load double***, double**** @K, align 8
  %309 = load i32, i32* %11, align 4
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds double**, double*** %308, i64 %310
  %312 = load double**, double*** %311, align 8
  %313 = getelementptr inbounds double*, double** %312, i64 1
  %314 = load double*, double** %313, align 8
  %315 = getelementptr inbounds double, double* %314, i64 0
  %316 = load double, double* %315, align 8
  %317 = load double**, double*** @v, align 8
  %318 = load i32, i32* %6, align 4
  %319 = sext i32 %318 to i64
  %320 = getelementptr inbounds double*, double** %317, i64 %319
  %321 = load double*, double** %320, align 8
  %322 = getelementptr inbounds double, double* %321, i64 1
  %323 = load double, double* %322, align 8
  %324 = fmul double %316, %323
  %325 = fadd double %307, %324
  %326 = load double***, double**** @K, align 8
  %327 = load i32, i32* %11, align 4
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds double**, double*** %326, i64 %328
  %330 = load double**, double*** %329, align 8
  %331 = getelementptr inbounds double*, double** %330, i64 2
  %332 = load double*, double** %331, align 8
  %333 = getelementptr inbounds double, double* %332, i64 0
  %334 = load double, double* %333, align 8
  %335 = load double**, double*** @v, align 8
  %336 = load i32, i32* %6, align 4
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds double*, double** %335, i64 %337
  %339 = load double*, double** %338, align 8
  %340 = getelementptr inbounds double, double* %339, i64 2
  %341 = load double, double* %340, align 8
  %342 = fmul double %334, %341
  %343 = fadd double %325, %342
  %344 = load double***, double**** @disp, align 8
  %345 = getelementptr inbounds double**, double*** %344, i64 1
  %346 = load double**, double*** %345, align 8
  %347 = load i32, i32* %13, align 4
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds double*, double** %346, i64 %348
  %350 = load double*, double** %349, align 8
  %351 = getelementptr inbounds double, double* %350, i64 0
  %352 = load double, double* %351, align 8
  %353 = fadd double %352, %343
  store double %353, double* %351, align 8
  %354 = load double***, double**** @K, align 8
  %355 = load i32, i32* %11, align 4
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds double**, double*** %354, i64 %356
  %358 = load double**, double*** %357, align 8
  %359 = getelementptr inbounds double*, double** %358, i64 0
  %360 = load double*, double** %359, align 8
  %361 = getelementptr inbounds double, double* %360, i64 1
  %362 = load double, double* %361, align 8
  %363 = load double**, double*** @v, align 8
  %364 = load i32, i32* %6, align 4
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds double*, double** %363, i64 %365
  %367 = load double*, double** %366, align 8
  %368 = getelementptr inbounds double, double* %367, i64 0
  %369 = load double, double* %368, align 8
  %370 = fmul double %362, %369
  %371 = load double***, double**** @K, align 8
  %372 = load i32, i32* %11, align 4
  %373 = sext i32 %372 to i64
  %374 = getelementptr inbounds double**, double*** %371, i64 %373
  %375 = load double**, double*** %374, align 8
  %376 = getelementptr inbounds double*, double** %375, i64 1
  %377 = load double*, double** %376, align 8
  %378 = getelementptr inbounds double, double* %377, i64 1
  %379 = load double, double* %378, align 8
  %380 = load double**, double*** @v, align 8
  %381 = load i32, i32* %6, align 4
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds double*, double** %380, i64 %382
  %384 = load double*, double** %383, align 8
  %385 = getelementptr inbounds double, double* %384, i64 1
  %386 = load double, double* %385, align 8
  %387 = fmul double %379, %386
  %388 = fadd double %370, %387
  %389 = load double***, double**** @K, align 8
  %390 = load i32, i32* %11, align 4
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds double**, double*** %389, i64 %391
  %393 = load double**, double*** %392, align 8
  %394 = getelementptr inbounds double*, double** %393, i64 2
  %395 = load double*, double** %394, align 8
  %396 = getelementptr inbounds double, double* %395, i64 1
  %397 = load double, double* %396, align 8
  %398 = load double**, double*** @v, align 8
  %399 = load i32, i32* %6, align 4
  %400 = sext i32 %399 to i64
  %401 = getelementptr inbounds double*, double** %398, i64 %400
  %402 = load double*, double** %401, align 8
  %403 = getelementptr inbounds double, double* %402, i64 2
  %404 = load double, double* %403, align 8
  %405 = fmul double %397, %404
  %406 = fadd double %388, %405
  %407 = load double***, double**** @disp, align 8
  %408 = getelementptr inbounds double**, double*** %407, i64 1
  %409 = load double**, double*** %408, align 8
  %410 = load i32, i32* %13, align 4
  %411 = sext i32 %410 to i64
  %412 = getelementptr inbounds double*, double** %409, i64 %411
  %413 = load double*, double** %412, align 8
  %414 = getelementptr inbounds double, double* %413, i64 1
  %415 = load double, double* %414, align 8
  %416 = fadd double %415, %406
  store double %416, double* %414, align 8
  %417 = load double***, double**** @K, align 8
  %418 = load i32, i32* %11, align 4
  %419 = sext i32 %418 to i64
  %420 = getelementptr inbounds double**, double*** %417, i64 %419
  %421 = load double**, double*** %420, align 8
  %422 = getelementptr inbounds double*, double** %421, i64 0
  %423 = load double*, double** %422, align 8
  %424 = getelementptr inbounds double, double* %423, i64 2
  %425 = load double, double* %424, align 8
  %426 = load double**, double*** @v, align 8
  %427 = load i32, i32* %6, align 4
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds double*, double** %426, i64 %428
  %430 = load double*, double** %429, align 8
  %431 = getelementptr inbounds double, double* %430, i64 0
  %432 = load double, double* %431, align 8
  %433 = fmul double %425, %432
  %434 = load double***, double**** @K, align 8
  %435 = load i32, i32* %11, align 4
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds double**, double*** %434, i64 %436
  %438 = load double**, double*** %437, align 8
  %439 = getelementptr inbounds double*, double** %438, i64 1
  %440 = load double*, double** %439, align 8
  %441 = getelementptr inbounds double, double* %440, i64 2
  %442 = load double, double* %441, align 8
  %443 = load double**, double*** @v, align 8
  %444 = load i32, i32* %6, align 4
  %445 = sext i32 %444 to i64
  %446 = getelementptr inbounds double*, double** %443, i64 %445
  %447 = load double*, double** %446, align 8
  %448 = getelementptr inbounds double, double* %447, i64 1
  %449 = load double, double* %448, align 8
  %450 = fmul double %442, %449
  %451 = fadd double %433, %450
  %452 = load double***, double**** @K, align 8
  %453 = load i32, i32* %11, align 4
  %454 = sext i32 %453 to i64
  %455 = getelementptr inbounds double**, double*** %452, i64 %454
  %456 = load double**, double*** %455, align 8
  %457 = getelementptr inbounds double*, double** %456, i64 2
  %458 = load double*, double** %457, align 8
  %459 = getelementptr inbounds double, double* %458, i64 2
  %460 = load double, double* %459, align 8
  %461 = load double**, double*** @v, align 8
  %462 = load i32, i32* %6, align 4
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds double*, double** %461, i64 %463
  %465 = load double*, double** %464, align 8
  %466 = getelementptr inbounds double, double* %465, i64 2
  %467 = load double, double* %466, align 8
  %468 = fmul double %460, %467
  %469 = fadd double %451, %468
  %470 = load double***, double**** @disp, align 8
  %471 = getelementptr inbounds double**, double*** %470, i64 1
  %472 = load double**, double*** %471, align 8
  %473 = load i32, i32* %13, align 4
  %474 = sext i32 %473 to i64
  %475 = getelementptr inbounds double*, double** %472, i64 %474
  %476 = load double*, double** %475, align 8
  %477 = getelementptr inbounds double, double* %476, i64 2
  %478 = load double, double* %477, align 8
  %479 = fadd double %478, %469
  store double %479, double* %477, align 8
  %480 = load double***, double**** @K, align 8
  %481 = load i32, i32* %11, align 4
  %482 = sext i32 %481 to i64
  %483 = getelementptr inbounds double**, double*** %480, i64 %482
  %484 = load double**, double*** %483, align 8
  %485 = getelementptr inbounds double*, double** %484, i64 0
  %486 = load double*, double** %485, align 8
  %487 = getelementptr inbounds double, double* %486, i64 3
  %488 = load double, double* %487, align 8
  %489 = load double**, double*** @v, align 8
  %490 = load i32, i32* %6, align 4
  %491 = sext i32 %490 to i64
  %492 = getelementptr inbounds double*, double** %489, i64 %491
  %493 = load double*, double** %492, align 8
  %494 = getelementptr inbounds double, double* %493, i64 0
  %495 = load double, double* %494, align 8
  %496 = fmul double %488, %495
  %497 = load double***, double**** @K, align 8
  %498 = load i32, i32* %11, align 4
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds double**, double*** %497, i64 %499
  %501 = load double**, double*** %500, align 8
  %502 = getelementptr inbounds double*, double** %501, i64 1
  %503 = load double*, double** %502, align 8
  %504 = getelementptr inbounds double, double* %503, i64 3
  %505 = load double, double* %504, align 8
  %506 = load double**, double*** @v, align 8
  %507 = load i32, i32* %6, align 4
  %508 = sext i32 %507 to i64
  %509 = getelementptr inbounds double*, double** %506, i64 %508
  %510 = load double*, double** %509, align 8
  %511 = getelementptr inbounds double, double* %510, i64 1
  %512 = load double, double* %511, align 8
  %513 = fmul double %505, %512
  %514 = fadd double %496, %513
  %515 = load double***, double**** @K, align 8
  %516 = load i32, i32* %11, align 4
  %517 = sext i32 %516 to i64
  %518 = getelementptr inbounds double**, double*** %515, i64 %517
  %519 = load double**, double*** %518, align 8
  %520 = getelementptr inbounds double*, double** %519, i64 2
  %521 = load double*, double** %520, align 8
  %522 = getelementptr inbounds double, double* %521, i64 3
  %523 = load double, double* %522, align 8
  %524 = load double**, double*** @v, align 8
  %525 = load i32, i32* %6, align 4
  %526 = sext i32 %525 to i64
  %527 = getelementptr inbounds double*, double** %524, i64 %526
  %528 = load double*, double** %527, align 8
  %529 = getelementptr inbounds double, double* %528, i64 2
  %530 = load double, double* %529, align 8
  %531 = fmul double %523, %530
  %532 = fadd double %514, %531
  %533 = load double***, double**** @disp, align 8
  %534 = getelementptr inbounds double**, double*** %533, i64 1
  %535 = load double**, double*** %534, align 8
  %536 = load i32, i32* %13, align 4
  %537 = sext i32 %536 to i64
  %538 = getelementptr inbounds double*, double** %535, i64 %537
  %539 = load double*, double** %538, align 8
  %540 = getelementptr inbounds double, double* %539, i64 3
  %541 = load double, double* %540, align 8
  %542 = fadd double %541, %532
  store double %542, double* %540, align 8
  %543 = load double***, double**** @disp, align 8
  %544 = bitcast double*** %543 to i8*
  %545 = load double***, double**** @K, align 8
  %546 = bitcast double*** %545 to i8*
  call void @NOALIAS(i8* %544, i8* %546)
  %547 = load double***, double**** @disp, align 8
  %548 = bitcast double*** %547 to i8*
  %549 = load double**, double*** @v, align 8
  %550 = bitcast double** %549 to i8*
  call void @NOALIAS(i8* %548, i8* %550)
  %551 = load double***, double**** @disp, align 8
  %552 = getelementptr inbounds double**, double*** %551, i64 1
  %553 = load double**, double*** %552, align 8
  %554 = bitcast double** %553 to i8*
  %555 = load double***, double**** @K, align 8
  %556 = load i32, i32* %11, align 4
  %557 = sext i32 %556 to i64
  %558 = getelementptr inbounds double**, double*** %555, i64 %557
  %559 = load double**, double*** %558, align 8
  %560 = bitcast double** %559 to i8*
  call void @NOALIAS(i8* %554, i8* %560)
  %561 = load double***, double**** @disp, align 8
  %562 = getelementptr inbounds double**, double*** %561, i64 1
  %563 = load double**, double*** %562, align 8
  %564 = bitcast double** %563 to i8*
  %565 = load double**, double*** @v, align 8
  %566 = load i32, i32* %6, align 4
  %567 = sext i32 %566 to i64
  %568 = getelementptr inbounds double*, double** %565, i64 %567
  %569 = load double*, double** %568, align 8
  %570 = bitcast double* %569 to i8*
  call void @NOALIAS(i8* %564, i8* %570)
  %571 = load double***, double**** @disp, align 8
  %572 = getelementptr inbounds double**, double*** %571, i64 1
  %573 = load double**, double*** %572, align 8
  %574 = load i32, i32* %13, align 4
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds double*, double** %573, i64 %575
  %577 = load double*, double** %576, align 8
  %578 = bitcast double* %577 to i8*
  %579 = load double**, double*** @v, align 8
  %580 = load i32, i32* %6, align 4
  %581 = sext i32 %580 to i64
  %582 = getelementptr inbounds double*, double** %579, i64 %581
  %583 = load double*, double** %582, align 8
  %584 = bitcast double* %583 to i8*
  call void @NOALIAS(i8* %578, i8* %584)
  %585 = load i32, i32* %11, align 4
  %586 = add nsw i32 %585, 1
  store i32 %586, i32* %11, align 4
  br label %281

587:                                              ; preds = %281
  br label %588

588:                                              ; preds = %587
  %589 = load i32, i32* %6, align 4
  %590 = add nsw i32 %589, 1
  store i32 %590, i32* %6, align 4
  br label %266

591:                                              ; preds = %266
  br label %592

592:                                              ; preds = %591
  %593 = load i32, i32* %10, align 4
  %594 = add nsw i32 %593, 1
  store i32 %594, i32* %10, align 4
  br label %262

595:                                              ; preds = %262
  %596 = load double***, double**** @disp, align 8
  %597 = getelementptr inbounds double**, double*** %596, i64 1
  %598 = load double**, double*** %597, align 8
  %599 = getelementptr inbounds double*, double** %598, i64 4999
  %600 = load double*, double** %599, align 8
  %601 = getelementptr inbounds double, double* %600, i64 2
  %602 = load double, double* %601, align 8
  store double %602, double* %18, align 8
  store i32 0, i32* %9, align 4
  br label %603

603:                                              ; preds = %631, %595
  %604 = load i32, i32* %9, align 4
  %605 = icmp slt i32 %604, 3
  br i1 %605, label %606, label %634

606:                                              ; preds = %603
  store i32 0, i32* %6, align 4
  br label %607

607:                                              ; preds = %621, %606
  %608 = load i32, i32* %6, align 4
  %609 = icmp slt i32 %608, 5000
  br i1 %609, label %610, label %624

610:                                              ; preds = %607
  %611 = load double***, double**** @disp, align 8
  %612 = load i32, i32* %9, align 4
  %613 = sext i32 %612 to i64
  %614 = getelementptr inbounds double**, double*** %611, i64 %613
  %615 = load double**, double*** %614, align 8
  %616 = load i32, i32* %6, align 4
  %617 = sext i32 %616 to i64
  %618 = getelementptr inbounds double*, double** %615, i64 %617
  %619 = load double*, double** %618, align 8
  %620 = bitcast double* %619 to i8*
  call void @free(i8* %620) #3
  br label %621

621:                                              ; preds = %610
  %622 = load i32, i32* %6, align 4
  %623 = add nsw i32 %622, 1
  store i32 %623, i32* %6, align 4
  br label %607

624:                                              ; preds = %607
  %625 = load double***, double**** @disp, align 8
  %626 = load i32, i32* %9, align 4
  %627 = sext i32 %626 to i64
  %628 = getelementptr inbounds double**, double*** %625, i64 %627
  %629 = load double**, double*** %628, align 8
  %630 = bitcast double** %629 to i8*
  call void @free(i8* %630) #3
  br label %631

631:                                              ; preds = %624
  %632 = load i32, i32* %9, align 4
  %633 = add nsw i32 %632, 1
  store i32 %633, i32* %9, align 4
  br label %603

634:                                              ; preds = %603
  %635 = load double***, double**** @disp, align 8
  %636 = bitcast double*** %635 to i8*
  call void @free(i8* %636) #3
  store i32 0, i32* %9, align 4
  br label %637

637:                                              ; preds = %665, %634
  %638 = load i32, i32* %9, align 4
  %639 = icmp slt i32 %638, 3
  br i1 %639, label %640, label %668

640:                                              ; preds = %637
  store i32 0, i32* %6, align 4
  br label %641

641:                                              ; preds = %655, %640
  %642 = load i32, i32* %6, align 4
  %643 = icmp slt i32 %642, 5000
  br i1 %643, label %644, label %658

644:                                              ; preds = %641
  %645 = load double***, double**** @K, align 8
  %646 = load i32, i32* %9, align 4
  %647 = sext i32 %646 to i64
  %648 = getelementptr inbounds double**, double*** %645, i64 %647
  %649 = load double**, double*** %648, align 8
  %650 = load i32, i32* %6, align 4
  %651 = sext i32 %650 to i64
  %652 = getelementptr inbounds double*, double** %649, i64 %651
  %653 = load double*, double** %652, align 8
  %654 = bitcast double* %653 to i8*
  call void @free(i8* %654) #3
  br label %655

655:                                              ; preds = %644
  %656 = load i32, i32* %6, align 4
  %657 = add nsw i32 %656, 1
  store i32 %657, i32* %6, align 4
  br label %641

658:                                              ; preds = %641
  %659 = load double***, double**** @K, align 8
  %660 = load i32, i32* %9, align 4
  %661 = sext i32 %660 to i64
  %662 = getelementptr inbounds double**, double*** %659, i64 %661
  %663 = load double**, double*** %662, align 8
  %664 = bitcast double** %663 to i8*
  call void @free(i8* %664) #3
  br label %665

665:                                              ; preds = %658
  %666 = load i32, i32* %9, align 4
  %667 = add nsw i32 %666, 1
  store i32 %667, i32* %9, align 4
  br label %637

668:                                              ; preds = %637
  %669 = load double***, double**** @K, align 8
  %670 = bitcast double*** %669 to i8*
  call void @free(i8* %670) #3
  store i32 0, i32* %6, align 4
  br label %671

671:                                              ; preds = %681, %668
  %672 = load i32, i32* %6, align 4
  %673 = icmp slt i32 %672, 5000
  br i1 %673, label %674, label %684

674:                                              ; preds = %671
  %675 = load double**, double*** @v, align 8
  %676 = load i32, i32* %6, align 4
  %677 = sext i32 %676 to i64
  %678 = getelementptr inbounds double*, double** %675, i64 %677
  %679 = load double*, double** %678, align 8
  %680 = bitcast double* %679 to i8*
  call void @free(i8* %680) #3
  br label %681

681:                                              ; preds = %674
  %682 = load i32, i32* %6, align 4
  %683 = add nsw i32 %682, 1
  store i32 %683, i32* %6, align 4
  br label %671

684:                                              ; preds = %671
  %685 = load double**, double*** @v, align 8
  %686 = bitcast double** %685 to i8*
  call void @free(i8* %686) #3
  %687 = load i32*, i32** @ARCHmatrixindex, align 8
  %688 = bitcast i32* %687 to i8*
  call void @free(i8* %688) #3
  %689 = load i32*, i32** @Acol, align 8
  %690 = bitcast i32* %689 to i8*
  call void @free(i8* %690) #3
  %691 = load double, double* %18, align 8
  %692 = fcmp ogt double %691, 5.500000e+00
  br i1 %692, label %693, label %694

693:                                              ; preds = %684
  store i32 0, i32* %3, align 4
  br label %695

694:                                              ; preds = %684
  store i32 1, i32* %3, align 4
  br label %695

695:                                              ; preds = %694, %693, %139, %132, %125, %102, %59
  %696 = load i32, i32* %3, align 4
  ret i32 %696
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 9.0.0-2~ubuntu18.04.2 (tags/RELEASE_900/final)"}
