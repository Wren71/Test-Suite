; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/src/basic_cpp_tests/virtual-inheritance-3.cpp'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/basic_cpp_tests/virtual-inheritance-3.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%class.A = type { i32 (...)** }
%class.B = type { %class.A }

$_ZN1BC1Ev = comdat any

$_ZN1AC2Ev = comdat any

$_ZN1B1fEPi = comdat any

$_ZN1B1gEPf = comdat any

$_ZN1A1fEPi = comdat any

$_ZN1A1gEPf = comdat any

$_ZTv0_n24_N1B1fEPi = comdat any

$_ZTv0_n32_N1B1gEPf = comdat any

$_ZTV1B = comdat any

$_ZTT1B = comdat any

$_ZTS1B = comdat any

$_ZTS1A = comdat any

$_ZTI1A = comdat any

$_ZTI1B = comdat any

$_ZTV1A = comdat any

@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"Press ENTER to continue\0A\00", align 1
@global_int_obj = dso_local global i32 0, align 4
@global_int_ptr = dso_local global i32* @global_int_obj, align 8
@global_float_obj = dso_local global float 0.000000e+00, align 4
@global_float_ptr = dso_local global float* @global_float_obj, align 8
@_ZTV1B = linkonce_odr dso_local unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* null, i8* null, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64 }* @_ZTI1B to i8*), i8* bitcast (void (%class.B*, i32*)* @_ZN1B1fEPi to i8*), i8* bitcast (void (%class.B*, float*)* @_ZN1B1gEPf to i8*)] }, comdat, align 8
@_ZTT1B = linkonce_odr dso_local unnamed_addr constant [2 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV1B, i32 0, inrange i32 0, i32 5) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV1B, i32 0, inrange i32 0, i32 5) to i8*)], comdat, align 8
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external dso_local global i8*
@_ZTS1B = linkonce_odr dso_local constant [3 x i8] c"1B\00", comdat, align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external dso_local global i8*
@_ZTS1A = linkonce_odr dso_local constant [3 x i8] c"1A\00", comdat, align 1
@_ZTI1A = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZTS1A, i32 0, i32 0) }, comdat, align 8
@_ZTI1B = linkonce_odr dso_local constant { i8*, i8*, i32, i32, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZTS1B, i32 0, i32 0), i32 0, i32 1, i8* bitcast ({ i8*, i8* }* @_ZTI1A to i8*), i64 -10237 }, comdat, align 8
@_ZTV1A = linkonce_odr dso_local unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTI1A to i8*), i8* bitcast (void (%class.A*, i32*)* @_ZN1A1fEPi to i8*), i8* bitcast (void (%class.A*, float*)* @_ZN1A1gEPf to i8*)] }, comdat, align 8

; Function Attrs: noinline optnone uwtable
define dso_local void @_Z9MUSTALIASPvS_(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noinline optnone uwtable
define dso_local void @_Z12PARTIALALIASPvS_(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_Z8MAYALIASPvS_(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_Z7NOALIASPvS_(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_Z21EXPECTEDFAIL_MAYALIASPvS_(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_Z20EXPECTEDFAIL_NOALIASPvS_(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @_Z10SAFEMALLOCi(i32) #2 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #6
  ret i8* %5
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @_Z9PLKMALLOCi(i32) #2 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #6
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @_Z9NFRMALLOCi(i32) #2 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #6
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @_Z9CLKMALLOCi(i32) #2 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #6
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @_Z9NFRLEAKFPi(i32) #2 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #6
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @_Z9PLKLEAKFPi(i32) #2 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #6
  ret i8* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @_Z6LEAKFNi(i32) #2 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = call noalias i8* @malloc(i64 %4) #6
  ret i8* %5
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_Z9RC_ACCESSii(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_Z10CXT_THREADiPc(i32, i8*) #2 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_Z10TCT_ACCESSiPc(i32, i8*) #2 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_Z15INTERLEV_ACCESSiPcS_(i32, i8*, i8*) #2 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_Z5PAUSEPc(i8*) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8* %3)
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0))
  %6 = call i32 @getchar()
  ret void
}

declare dso_local i32 @getchar() #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_Z5derefv() #2 {
  ret void
}

; Function Attrs: noinline norecurse optnone uwtable
define dso_local i32 @main(i32, i8**) #4 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32*, align 8
  %7 = alloca float*, align 8
  %8 = alloca %class.A*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32* @global_int_obj, i32** %6, align 8
  store float* @global_float_obj, float** %7, align 8
  %9 = call i8* @_Znwm(i64 8) #7
  %10 = bitcast i8* %9 to %class.B*
  call void @_ZN1BC1Ev(%class.B* %10) #6
  %11 = icmp eq %class.B* %10, null
  br i1 %11, label %21, label %12

12:                                               ; preds = %2
  %13 = bitcast %class.B* %10 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 -40
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %class.B* %10 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 %17
  %20 = bitcast i8* %19 to %class.A*
  br label %21

21:                                               ; preds = %12, %2
  %22 = phi %class.A* [ %20, %12 ], [ null, %2 ]
  store %class.A* %22, %class.A** %8, align 8
  %23 = load %class.A*, %class.A** %8, align 8
  %24 = load i32*, i32** %6, align 8
  %25 = bitcast %class.A* %23 to void (%class.A*, i32*)***
  %26 = load void (%class.A*, i32*)**, void (%class.A*, i32*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.A*, i32*)*, void (%class.A*, i32*)** %26, i64 0
  %28 = load void (%class.A*, i32*)*, void (%class.A*, i32*)** %27, align 8
  call void %28(%class.A* %23, i32* %24)
  %29 = load %class.A*, %class.A** %8, align 8
  %30 = load float*, float** %7, align 8
  %31 = bitcast %class.A* %29 to void (%class.A*, float*)***
  %32 = load void (%class.A*, float*)**, void (%class.A*, float*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.A*, float*)*, void (%class.A*, float*)** %32, i64 1
  %34 = load void (%class.A*, float*)*, void (%class.A*, float*)** %33, align 8
  call void %34(%class.A* %29, float* %30)
  ret i32 0
}

; Function Attrs: nobuiltin
declare dso_local noalias i8* @_Znwm(i64) #5

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN1BC1Ev(%class.B*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %class.B*, align 8
  store %class.B* %0, %class.B** %2, align 8
  %3 = load %class.B*, %class.B** %2, align 8
  %4 = bitcast %class.B* %3 to %class.A*
  call void @_ZN1AC2Ev(%class.A* %4) #6
  %5 = bitcast %class.B* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV1B, i32 0, inrange i32 0, i32 5) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = bitcast %class.B* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV1B, i32 0, inrange i32 0, i32 5) to i32 (...)**), i32 (...)*** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN1AC2Ev(%class.A*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %class.A*, align 8
  store %class.A* %0, %class.A** %2, align 8
  %3 = load %class.A*, %class.A** %2, align 8
  %4 = bitcast %class.A* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV1A, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZN1B1fEPi(%class.B*, i32*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.B*, align 8
  %4 = alloca i32*, align 8
  store %class.B* %0, %class.B** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %class.B*, %class.B** %3, align 8
  %6 = load i32*, i32** @global_int_ptr, align 8
  %7 = bitcast i32* %6 to i8*
  %8 = load i32*, i32** %4, align 8
  %9 = bitcast i32* %8 to i8*
  call void @_Z9MUSTALIASPvS_(i8* %7, i8* %9)
  %10 = load float*, float** @global_float_ptr, align 8
  %11 = bitcast float* %10 to i8*
  %12 = load i32*, i32** %4, align 8
  %13 = bitcast i32* %12 to i8*
  call void @_Z7NOALIASPvS_(i8* %11, i8* %13)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZN1B1gEPf(%class.B*, float*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.B*, align 8
  %4 = alloca float*, align 8
  store %class.B* %0, %class.B** %3, align 8
  store float* %1, float** %4, align 8
  %5 = load %class.B*, %class.B** %3, align 8
  %6 = load i32*, i32** @global_int_ptr, align 8
  %7 = bitcast i32* %6 to i8*
  %8 = load float*, float** %4, align 8
  %9 = bitcast float* %8 to i8*
  call void @_Z7NOALIASPvS_(i8* %7, i8* %9)
  %10 = load float*, float** @global_float_ptr, align 8
  %11 = bitcast float* %10 to i8*
  %12 = load float*, float** %4, align 8
  %13 = bitcast float* %12 to i8*
  call void @_Z9MUSTALIASPvS_(i8* %11, i8* %13)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZN1A1fEPi(%class.A*, i32*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.A*, align 8
  %4 = alloca i32*, align 8
  store %class.A* %0, %class.A** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %class.A*, %class.A** %3, align 8
  %6 = load i32*, i32** @global_int_ptr, align 8
  %7 = bitcast i32* %6 to i8*
  %8 = load i32*, i32** %4, align 8
  %9 = bitcast i32* %8 to i8*
  call void @_Z9MUSTALIASPvS_(i8* %7, i8* %9)
  %10 = load float*, float** @global_float_ptr, align 8
  %11 = bitcast float* %10 to i8*
  %12 = load i32*, i32** %4, align 8
  %13 = bitcast i32* %12 to i8*
  call void @_Z7NOALIASPvS_(i8* %11, i8* %13)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZN1A1gEPf(%class.A*, float*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.A*, align 8
  %4 = alloca float*, align 8
  store %class.A* %0, %class.A** %3, align 8
  store float* %1, float** %4, align 8
  %5 = load %class.A*, %class.A** %3, align 8
  %6 = load i32*, i32** @global_int_ptr, align 8
  %7 = bitcast i32* %6 to i8*
  %8 = load float*, float** %4, align 8
  %9 = bitcast float* %8 to i8*
  call void @_Z7NOALIASPvS_(i8* %7, i8* %9)
  %10 = load float*, float** @global_float_ptr, align 8
  %11 = bitcast float* %10 to i8*
  %12 = load float*, float** %4, align 8
  %13 = bitcast float* %12 to i8*
  call void @_Z9MUSTALIASPvS_(i8* %11, i8* %13)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZTv0_n24_N1B1fEPi(%class.B*, i32*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.B*, align 8
  %4 = alloca i32*, align 8
  store %class.B* %0, %class.B** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %class.B*, %class.B** %3, align 8
  %6 = bitcast %class.B* %5 to i8*
  %7 = bitcast i8* %6 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 -24
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %class.B*
  %14 = load i32*, i32** %4, align 8
  tail call void @_ZN1B1fEPi(%class.B* %13, i32* %14)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZTv0_n32_N1B1gEPf(%class.B*, float*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.B*, align 8
  %4 = alloca float*, align 8
  store %class.B* %0, %class.B** %3, align 8
  store float* %1, float** %4, align 8
  %5 = load %class.B*, %class.B** %3, align 8
  %6 = bitcast %class.B* %5 to i8*
  %7 = bitcast i8* %6 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 -32
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %class.B*
  %14 = load float*, float** %4, align 8
  tail call void @_ZN1B1gEPf(%class.B* %13, float* %14)
  ret void
}

attributes #0 = { noinline optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline norecurse optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 9.0.0-2~ubuntu18.04.2 (tags/RELEASE_900/final)"}
