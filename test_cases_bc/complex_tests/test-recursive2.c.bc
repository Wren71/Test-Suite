; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/src/complex_tests/test-recursive2.c'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/complex_tests/test-recursive2.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.list = type { i32, %struct.list*, %struct.list* }

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.list* @construct(%struct.list*, i32) #0 {
  %3 = alloca %struct.list*, align 8
  %4 = alloca %struct.list*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.list*, align 8
  store %struct.list* %0, %struct.list** %4, align 8
  store i32 %1, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = icmp ugt i32 %7, 0
  br i1 %8, label %9, label %26

9:                                                ; preds = %2
  %10 = call i8* @malloc(i32 24)
  %11 = bitcast i8* %10 to %struct.list*
  store %struct.list* %11, %struct.list** %6, align 8
  %12 = load %struct.list*, %struct.list** %6, align 8
  %13 = getelementptr inbounds %struct.list, %struct.list* %12, i32 0, i32 0
  store i32 0, i32* %13, align 8
  %14 = load %struct.list*, %struct.list** %4, align 8
  %15 = load %struct.list*, %struct.list** %6, align 8
  %16 = getelementptr inbounds %struct.list, %struct.list* %15, i32 0, i32 1
  store %struct.list* %14, %struct.list** %16, align 8
  %17 = load %struct.list*, %struct.list** %6, align 8
  %18 = load %struct.list*, %struct.list** %4, align 8
  %19 = getelementptr inbounds %struct.list, %struct.list* %18, i32 0, i32 2
  store %struct.list* %17, %struct.list** %19, align 8
  %20 = load %struct.list*, %struct.list** %6, align 8
  %21 = getelementptr inbounds %struct.list, %struct.list* %20, i32 0, i32 2
  store %struct.list* null, %struct.list** %21, align 8
  %22 = load %struct.list*, %struct.list** %6, align 8
  %23 = load i32, i32* %5, align 4
  %24 = add i32 %23, -1
  store i32 %24, i32* %5, align 4
  %25 = call %struct.list* @construct(%struct.list* %22, i32 %23)
  store %struct.list* %25, %struct.list** %3, align 8
  br label %29

26:                                               ; preds = %2
  %27 = load %struct.list*, %struct.list** %4, align 8
  %28 = call %struct.list* @construct1(%struct.list* %27, i32 10)
  store %struct.list* %28, %struct.list** %3, align 8
  br label %29

29:                                               ; preds = %26, %9
  %30 = load %struct.list*, %struct.list** %3, align 8
  ret %struct.list* %30
}

declare dso_local i8* @malloc(i32) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.list* @construct1(%struct.list*, i32) #0 {
  %3 = alloca %struct.list*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.list*, align 8
  store %struct.list* %0, %struct.list** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp ugt i32 %6, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = load %struct.list*, %struct.list** %3, align 8
  %10 = load i32, i32* %4, align 4
  %11 = sub i32 %10, 1
  %12 = call %struct.list* @construct(%struct.list* %9, i32 %11)
  store %struct.list* %12, %struct.list** %5, align 8
  %13 = load %struct.list*, %struct.list** %5, align 8
  %14 = load %struct.list*, %struct.list** %3, align 8
  %15 = getelementptr inbounds %struct.list, %struct.list* %14, i32 0, i32 1
  store %struct.list* %13, %struct.list** %15, align 8
  br label %16

16:                                               ; preds = %8, %2
  %17 = load %struct.list*, %struct.list** %3, align 8
  ret %struct.list* %17
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.list* @walklist(%struct.list*) #0 {
  %2 = alloca %struct.list*, align 8
  %3 = alloca %struct.list*, align 8
  %4 = alloca %struct.list*, align 8
  store %struct.list* %0, %struct.list** %2, align 8
  %5 = load %struct.list*, %struct.list** %2, align 8
  store %struct.list* %5, %struct.list** %3, align 8
  br label %6

6:                                                ; preds = %11, %1
  %7 = load %struct.list*, %struct.list** %3, align 8
  %8 = getelementptr inbounds %struct.list, %struct.list* %7, i32 0, i32 2
  %9 = load %struct.list*, %struct.list** %8, align 8
  %10 = icmp ne %struct.list* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %6
  %12 = load %struct.list*, %struct.list** %3, align 8
  %13 = getelementptr inbounds %struct.list, %struct.list* %12, i32 0, i32 2
  %14 = load %struct.list*, %struct.list** %13, align 8
  store %struct.list* %14, %struct.list** %3, align 8
  br label %6

15:                                               ; preds = %6
  br label %16

16:                                               ; preds = %39, %15
  %17 = load %struct.list*, %struct.list** %3, align 8
  %18 = getelementptr inbounds %struct.list, %struct.list* %17, i32 0, i32 1
  %19 = load %struct.list*, %struct.list** %18, align 8
  %20 = icmp ne %struct.list* %19, null
  br i1 %20, label %21, label %47

21:                                               ; preds = %16
  %22 = load %struct.list*, %struct.list** %3, align 8
  store %struct.list* %22, %struct.list** %4, align 8
  %23 = load %struct.list*, %struct.list** %4, align 8
  %24 = getelementptr inbounds %struct.list, %struct.list* %23, i32 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = add i32 %25, 1
  store i32 %26, i32* %24, align 8
  %27 = load %struct.list*, %struct.list** %4, align 8
  %28 = getelementptr inbounds %struct.list, %struct.list* %27, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = icmp ugt i32 %29, 5
  br i1 %30, label %31, label %35

31:                                               ; preds = %21
  %32 = load %struct.list*, %struct.list** %3, align 8
  %33 = getelementptr inbounds %struct.list, %struct.list* %32, i32 0, i32 1
  %34 = load %struct.list*, %struct.list** %33, align 8
  store %struct.list* %34, %struct.list** %3, align 8
  br label %39

35:                                               ; preds = %21
  %36 = load %struct.list*, %struct.list** %3, align 8
  %37 = getelementptr inbounds %struct.list, %struct.list* %36, i32 0, i32 2
  %38 = load %struct.list*, %struct.list** %37, align 8
  store %struct.list* %38, %struct.list** %3, align 8
  br label %39

39:                                               ; preds = %35, %31
  %40 = load %struct.list*, %struct.list** %3, align 8
  %41 = call %struct.list* @walklist(%struct.list* %40)
  %42 = load %struct.list*, %struct.list** %3, align 8
  %43 = getelementptr inbounds %struct.list, %struct.list* %42, i32 0, i32 2
  store %struct.list* %41, %struct.list** %43, align 8
  %44 = load %struct.list*, %struct.list** %4, align 8
  %45 = load %struct.list*, %struct.list** %3, align 8
  %46 = getelementptr inbounds %struct.list, %struct.list* %45, i32 0, i32 1
  store %struct.list* %44, %struct.list** %46, align 8
  br label %16

47:                                               ; preds = %16
  %48 = load %struct.list*, %struct.list** %3, align 8
  ret %struct.list* %48
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca %struct.list*, align 8
  %2 = call i8* @malloc(i32 24)
  %3 = bitcast i8* %2 to %struct.list*
  store %struct.list* %3, %struct.list** %1, align 8
  %4 = load %struct.list*, %struct.list** %1, align 8
  %5 = getelementptr inbounds %struct.list, %struct.list* %4, i32 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = load %struct.list*, %struct.list** %1, align 8
  %7 = getelementptr inbounds %struct.list, %struct.list* %6, i32 0, i32 1
  store %struct.list* null, %struct.list** %7, align 8
  %8 = load %struct.list*, %struct.list** %1, align 8
  %9 = getelementptr inbounds %struct.list, %struct.list* %8, i32 0, i32 2
  store %struct.list* null, %struct.list** %9, align 8
  %10 = load %struct.list*, %struct.list** %1, align 8
  %11 = call %struct.list* @construct(%struct.list* %10, i32 10)
  store %struct.list* %11, %struct.list** %1, align 8
  %12 = load %struct.list*, %struct.list** %1, align 8
  %13 = call %struct.list* @walklist(%struct.list* %12)
  store %struct.list* %13, %struct.list** %1, align 8
  ret i32 0
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 9.0.0-2~ubuntu18.04.2 (tags/RELEASE_900/final)"}
