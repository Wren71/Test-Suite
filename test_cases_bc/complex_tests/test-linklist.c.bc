; ModuleID = '/home/runner/work/Test-Suite/Test-Suite/src/complex_tests/test-linklist.c'
source_filename = "/home/runner/work/Test-Suite/Test-Suite/src/complex_tests/test-linklist.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.list = type { i32, %struct.list* }

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @destroy(%struct.list*) #0 {
  %2 = alloca %struct.list*, align 8
  %3 = alloca %struct.list*, align 8
  store %struct.list* %0, %struct.list** %2, align 8
  %4 = load %struct.list*, %struct.list** %2, align 8
  store %struct.list* %4, %struct.list** %3, align 8
  br label %5

5:                                                ; preds = %10, %1
  %6 = load %struct.list*, %struct.list** %3, align 8
  %7 = getelementptr inbounds %struct.list, %struct.list* %6, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, -1
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = load %struct.list*, %struct.list** %3, align 8
  %12 = getelementptr inbounds %struct.list, %struct.list* %11, i32 0, i32 1
  %13 = load %struct.list*, %struct.list** %12, align 8
  store %struct.list* %13, %struct.list** %3, align 8
  %14 = load %struct.list*, %struct.list** %3, align 8
  %15 = bitcast %struct.list* %14 to i8*
  call void @free(i8* %15)
  br label %5

16:                                               ; preds = %5
  ret void
}

declare dso_local void @free(i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.list* @construct(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.list*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.list*, align 8
  store i32 %0, i32* %2, align 4
  store i32 0, i32* %4, align 4
  %6 = call i8* @malloc(i32 16)
  %7 = bitcast i8* %6 to %struct.list*
  store %struct.list* %7, %struct.list** %3, align 8
  %8 = load %struct.list*, %struct.list** %3, align 8
  %9 = getelementptr inbounds %struct.list, %struct.list* %8, i32 0, i32 1
  store %struct.list* null, %struct.list** %9, align 8
  %10 = load %struct.list*, %struct.list** %3, align 8
  %11 = getelementptr inbounds %struct.list, %struct.list* %10, i32 0, i32 0
  store i32 -1, i32* %11, align 8
  store i32 0, i32* %4, align 4
  br label %12

12:                                               ; preds = %26, %1
  %13 = load i32, i32* %4, align 4
  %14 = load i32, i32* %2, align 4
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %16, label %29

16:                                               ; preds = %12
  %17 = call i8* @malloc(i32 16)
  %18 = bitcast i8* %17 to %struct.list*
  store %struct.list* %18, %struct.list** %5, align 8
  %19 = load i32, i32* %2, align 4
  %20 = load %struct.list*, %struct.list** %5, align 8
  %21 = getelementptr inbounds %struct.list, %struct.list* %20, i32 0, i32 0
  store i32 %19, i32* %21, align 8
  %22 = load %struct.list*, %struct.list** %3, align 8
  %23 = load %struct.list*, %struct.list** %5, align 8
  %24 = getelementptr inbounds %struct.list, %struct.list* %23, i32 0, i32 1
  store %struct.list* %22, %struct.list** %24, align 8
  %25 = load %struct.list*, %struct.list** %5, align 8
  store %struct.list* %25, %struct.list** %3, align 8
  br label %26

26:                                               ; preds = %16
  %27 = load i32, i32* %4, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %4, align 4
  br label %12

29:                                               ; preds = %12
  %30 = load %struct.list*, %struct.list** %3, align 8
  ret %struct.list* %30
}

declare dso_local i8* @malloc(i32) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.list* @addlist(%struct.list*, %struct.list*) #0 {
  %3 = alloca %struct.list*, align 8
  %4 = alloca %struct.list*, align 8
  %5 = alloca %struct.list*, align 8
  %6 = alloca %struct.list*, align 8
  store %struct.list* %0, %struct.list** %3, align 8
  store %struct.list* %1, %struct.list** %4, align 8
  %7 = load %struct.list*, %struct.list** %3, align 8
  store %struct.list* %7, %struct.list** %5, align 8
  br label %8

8:                                                ; preds = %13, %2
  %9 = load %struct.list*, %struct.list** %5, align 8
  %10 = getelementptr inbounds %struct.list, %struct.list* %9, i32 0, i32 1
  %11 = load %struct.list*, %struct.list** %10, align 8
  store %struct.list* %11, %struct.list** %6, align 8
  %12 = icmp ne %struct.list* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  %14 = load %struct.list*, %struct.list** %6, align 8
  store %struct.list* %14, %struct.list** %5, align 8
  br label %8

15:                                               ; preds = %8
  %16 = load %struct.list*, %struct.list** %4, align 8
  %17 = load %struct.list*, %struct.list** %5, align 8
  %18 = getelementptr inbounds %struct.list, %struct.list* %17, i32 0, i32 1
  store %struct.list* %16, %struct.list** %18, align 8
  %19 = load %struct.list*, %struct.list** %3, align 8
  ret %struct.list* %19
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @main() #0 {
  %1 = alloca %struct.list*, align 8
  %2 = alloca %struct.list*, align 8
  %3 = call %struct.list* @construct(i32 10)
  store %struct.list* %3, %struct.list** %1, align 8
  %4 = call %struct.list* @construct(i32 2)
  store %struct.list* %4, %struct.list** %2, align 8
  %5 = load %struct.list*, %struct.list** %1, align 8
  %6 = getelementptr inbounds %struct.list, %struct.list* %5, i32 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 5
  br i1 %8, label %9, label %11

9:                                                ; preds = %0
  %10 = load %struct.list*, %struct.list** %1, align 8
  store %struct.list* %10, %struct.list** %2, align 8
  br label %11

11:                                               ; preds = %9, %0
  %12 = load %struct.list*, %struct.list** %1, align 8
  %13 = load %struct.list*, %struct.list** %2, align 8
  %14 = call %struct.list* @addlist(%struct.list* %12, %struct.list* %13)
  store %struct.list* %14, %struct.list** %1, align 8
  %15 = load %struct.list*, %struct.list** %1, align 8
  call void @destroy(%struct.list* %15)
  ret void
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 9.0.0-2~ubuntu18.04.2 (tags/RELEASE_900/final)"}
